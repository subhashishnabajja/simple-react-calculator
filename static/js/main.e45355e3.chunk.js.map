{"version":3,"sources":["context/CalculatorContext.js","components/IO.js","components/Button.js","components/Clear.js","components/Decimal.js","components/Equal.js","components/Negate.js","components/Operator.js","components/Keypad.js","App.js","reportWebVitals.js","index.js"],"names":["CalculatorContext","React","createContext","CalculatorProvider","props","useState","operandOne","setOperandOne","operandTwo","setOperandTwo","operator","setOperator","output","setOutput","value","appendOperand","num","getOperand","state","length","includes","parseFloat","toString","addOperator","op","getOutput","o","addDecimal","decimalize","negateOperand","negateNumber","number","slice","clear","operand","useEffect","calculate","Provider","children","useCalc","useContext","IO","expressionLen","className","isNaN","Button","onClick","Clear","Decimal","Equal","Negate","Operator","Keypad","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e45355e3.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from \"react\";\n\nconst CalculatorContext = React.createContext({});\n\nconst CalculatorProvider = (props) => {\n  const [operandOne, setOperandOne] = React.useState(\"0\");\n  const [operandTwo, setOperandTwo] = React.useState(\"\");\n  const [operator, setOperator] = React.useState(\"\");\n  const [output, setOutput] = React.useState(\"\");\n\n  const calculate = () => {\n    if (operandOne && operandTwo) {\n      switch (operator) {\n        case \"+\":\n          setOutput(parseFloat(operandOne) + parseFloat(operandTwo));\n          break;\n        case \"-\":\n          setOutput(parseFloat(operandOne) - parseFloat(operandTwo));\n          break;\n        case \"*\":\n          setOutput(parseFloat(operandOne) * parseFloat(operandTwo));\n          break;\n        case \"/\":\n          setOutput(parseFloat(operandOne) / parseFloat(operandTwo));\n          break;\n        case \"%\":\n          setOutput(parseFloat(operandOne) % parseFloat(operandTwo));\n          break;\n        default:\n          setOutput(parseFloat(operandOne));\n          break;\n      }\n    } else {\n      setOutput(operandOne);\n    }\n  };\n\n  const appendOperand = (num) => {\n    const getOperand = (state) => {\n      let newOperand = \"\";\n\n      if (state.length === 10) {\n        newOperand = state;\n      } else if (state.includes(\".\")) {\n        newOperand = state + num;\n      } else {\n        newOperand = parseFloat(state + num).toString();\n      }\n\n      return newOperand;\n    };\n    if (operator) {\n      setOperandTwo(getOperand);\n    } else {\n      setOperandOne(getOperand);\n    }\n  };\n\n  const addOperator = (op) => {\n    if (operator === \"\") {\n      setOperator(op);\n    } else {\n      setOperandOne(output.toString());\n      setOperator(op);\n      setOperandTwo(\"\");\n      setOutput(\"\");\n    }\n  };\n\n  const addDecimal = () => {\n    const decimalize = (state) => {\n      if (state.includes(\".\")) {\n        return state;\n      } else {\n        return state + \".\";\n      }\n    };\n\n    if (operator !== \"\") {\n      setOperandTwo(decimalize);\n    } else {\n      setOperandOne(decimalize);\n    }\n  };\n\n  const getOutput = () => {\n    if (operandOne && operator && operandTwo)\n      setOutput((o) => {\n        setOperandOne(o.toString());\n        setOperator(\"\");\n        setOperandTwo(\"\");\n        return \"\";\n      });\n  };\n\n  const negateOperand = () => {\n    const negateNumber = (number) => {\n      if (!number.includes(\"-\")) {\n        return `-${number}`;\n      } else {\n        return number.slice(1, number.length);\n      }\n    };\n    if (operator) {\n      setOperandTwo(negateNumber);\n    } else {\n      setOperandOne(negateNumber);\n    }\n  };\n\n  const clear = () => {\n    if (operator !== \"\" && operandTwo !== \"\") {\n      setOperandTwo((o) => o.slice(0, -1));\n    } else if (operator !== \"\") {\n      setOperator(\"\");\n    } else if (operandOne !== \"\") {\n      setOperandOne((o) => {\n        const operand = o.slice(0, -1);\n        if (operand === \"\") {\n          return \"0\";\n        } else {\n          return operand;\n        }\n      });\n    }\n  };\n\n  const value = {\n    appendOperand,\n    addOperator,\n    getOutput,\n    addDecimal,\n    negateOperand,\n    clear,\n    operandOne,\n    operandTwo,\n    operator,\n    output,\n  };\n\n  React.useEffect(() => {\n    calculate();\n  }, [operandOne, operator, operandTwo]);\n\n  return (\n    <CalculatorContext.Provider value={value}>\n      {props.children}\n    </CalculatorContext.Provider>\n  );\n};\n\nconst useCalc = () => {\n  return React.useContext(CalculatorContext);\n};\n\nexport { CalculatorProvider, useCalc };\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst IO = (props) => {\n  const { operandOne, operandTwo, operator, output } = useCalc();\n  const expressionLen = (operandOne + operator + operandTwo).length;\n\n  return (\n    <div className=\"input-output\">\n      <div className={expressionLen >= 5 ? \"font-lg\" : \"font-xl\"}>\n        {operandOne.includes(\"-\") ? \"(\" + operandOne + \")\" : operandOne}\n        <span className=\"font-red\">{operator}</span>\n        {operandTwo.includes(\"-\") ? \"(\" + operandTwo + \")\" : operandTwo}\n      </div>\n      <div>{isNaN(parseFloat(output)) ? \"0\" : output}</div>\n    </div>\n  );\n};\n\nexport default IO;\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst Button = (props) => {\n  const { appendOperand } = useCalc();\n\n  return (\n    <button onClick={() => appendOperand(props.children)}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst Clear = (props) => {\n  const { operandTwo, operandOne, clear } = useCalc();\n\n  return (\n    <button onClick={() => clear()} className=\"font-green\">\n      {operandOne || operandTwo ? \"C\" : \"AC\"}\n    </button>\n  );\n};\n\nexport default Clear;\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst Decimal = () => {\n  const { addDecimal } = useCalc();\n\n  return <button onClick={() => addDecimal()}>.</button>;\n};\n\nexport default Decimal;\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst Equal = (props) => {\n  const { getOutput } = useCalc();\n  return (\n    <button onClick={() => getOutput()} className=\"font-red\">\n      =\n    </button>\n  );\n};\n\nexport default Equal;\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst Negate = (props) => {\n  const { negateOperand } = useCalc();\n\n  return (\n    <button onClick={() => negateOperand()} className=\"font-green\">\n      +/-\n    </button>\n  );\n};\n\nexport default Negate;\n","import { useCalc } from \"../context/CalculatorContext\";\n\nconst Operator = (props) => {\n  const { addOperator } = useCalc();\n\n  return (\n    <button\n      onClick={() => addOperator(props.children)}\n      className={props.className || \"font-red\"}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Operator;\n","import Button from \"./Button\";\nimport Clear from \"./Clear\";\nimport Decimal from \"./Decimal\";\nimport Equal from \"./Equal\";\nimport Negate from \"./Negate\";\nimport Operator from \"./Operator\";\nconst Keypad = (props) => {\n  return (\n    <div className=\"keypad\">\n      <Clear />\n      <Negate />\n      <Operator className=\"font-green\">%</Operator>\n      <Operator>/</Operator>\n      <Button>7</Button>\n      <Button>8</Button>\n      <Button>9</Button>\n      <Operator>*</Operator>\n      <Button>4</Button>\n      <Button>5</Button>\n      <Button>6</Button>\n      <Operator>-</Operator>\n      <Button>1</Button>\n      <Button>2</Button>\n      <Button>3</Button>\n      <Operator>+</Operator>\n      <button>R</button>\n      <Button>0</Button>\n      <Decimal />\n      <Equal />\n    </div>\n  );\n};\nexport default Keypad;\n","import \"./App.css\";\nimport IO from \"./components/IO\";\nimport Keypad from \"./components/Keypad\";\nimport { CalculatorProvider } from \"./context/CalculatorContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalculatorProvider>\n        <div className=\"calculator-body\">\n          <IO />\n          <Keypad />\n        </div>\n      </CalculatorProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}